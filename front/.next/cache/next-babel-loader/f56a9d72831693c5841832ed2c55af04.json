{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"이성국\"\n    },\n    content: \"첫 번째 게시글\",\n    img: \"\",\n    Comments: []\n  }],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: \"\",\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: \"\",\n  commentAdded: false\n};\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  content: \"나는 더미입니다.\",\n  Comments: []\n};\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  createdAt: new Date(),\n  content: \"더미 댓글입니다.\"\n};\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const LOAD_COMMENTS_REQUEST = \"LOAD_COMMENTS_REQUEST\";\nexport const LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\nexport const LOAD_COMMENTS_FAILURE = \"LOAD_COMMENTS_FAILURE\";\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: \"\",\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data, ...state.mainPosts],\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: \"\",\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = [...post.Comments, dummyComment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","img","Comments","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","dummyComment","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","state","action","type","data","error","postIndex","findIndex","v","postId","post"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,UANX;AAOEC,IAAAA,GAAG,EAAE,EAPP;AAQEC,IAAAA,QAAQ,EAAE;AARZ,GADS,CADe;AAYvB;AACHC,EAAAA,UAAU,EAAE,EAbc;AAaV;AAChBC,EAAAA,kBAAkB,EAAE,EAdM;AAcF;AACxBC,EAAAA,YAAY,EAAE,KAfY;AAeL;AACrBC,EAAAA,SAAS,EAAE,KAhBe;AAgBR;AAClBC,EAAAA,eAAe,EAAE,KAjBS;AAkB1BC,EAAAA,qBAAqB,EAAE,EAlBG;AAmB1BC,EAAAA,YAAY,EAAE;AAnBY,CAArB;AAsBP,MAAMC,SAAS,GAAG;AAChBb,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAFU;AAMhBC,EAAAA,OAAO,EAAE,WANO;AAOhBE,EAAAA,QAAQ,EAAE;AAPM,CAAlB;AAUA,MAAMS,YAAY,GAAG;AACnBd,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAFa;AAMnBa,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EANQ;AAOnBb,EAAAA,OAAO,EAAE;AAPU,CAArB;AAUA,OAAO,MAAMc,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,gBAAe,CAACC,KAAK,GAAGrD,YAAT,EAAuBsD,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,gBAAL;AAAuB;AACrB,iCACKqB,KADL;AAEE3C,UAAAA,YAAY,EAAE,IAFhB;AAGED,UAAAA,kBAAkB,EAAE,EAHtB;AAIEE,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKsB,gBAAL;AAAuB;AACrB,iCACKoB,KADL;AAEE3C,UAAAA,YAAY,EAAE,KAFhB;AAGET,UAAAA,SAAS,EAAE,CAACqD,MAAM,CAACE,IAAR,EAAc,GAAGH,KAAK,CAACpD,SAAvB,CAHb;AAIEU,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKuB,gBAAL;AAAuB;AACrB,iCACKmB,KADL;AAEE3C,UAAAA,YAAY,EAAE,KAFhB;AAGED,UAAAA,kBAAkB,EAAE6C,MAAM,CAACG;AAH7B;AAKD;;AACD,SAAKhB,mBAAL;AAA0B;AACxB,iCACKY,KADL;AAEEzC,UAAAA,eAAe,EAAE,IAFnB;AAGEC,UAAAA,qBAAqB,EAAE,EAHzB;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAK4B,mBAAL;AAA0B;AACxB,cAAMgB,SAAS,GAAGL,KAAK,CAACpD,SAAN,CAAgB0D,SAAhB,CAChBC,CAAC,IAAIA,CAAC,CAAC1D,EAAF,KAASoD,MAAM,CAACE,IAAP,CAAYK,MADV,CAAlB;AAGA,cAAMC,IAAI,GAAGT,KAAK,CAACpD,SAAN,CAAgByD,SAAhB,CAAb;AACA,cAAMnD,QAAQ,GAAG,CAAC,GAAGuD,IAAI,CAACvD,QAAT,EAAmBS,YAAnB,CAAjB;AACA,cAAMf,SAAS,GAAG,CAAC,GAAGoD,KAAK,CAACpD,SAAV,CAAlB;AACAA,QAAAA,SAAS,CAACyD,SAAD,CAAT,qBAA4BI,IAA5B;AAAkCvD,UAAAA;AAAlC;AACA,iCACK8C,KADL;AAEEzC,UAAAA,eAAe,EAAE,KAFnB;AAGEX,UAAAA,SAHF;AAIEa,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAK6B,mBAAL;AAA0B;AACxB,iCACKU,KADL;AAEEzC,UAAAA,eAAe,EAAE,KAFnB;AAGEC,UAAAA,qBAAqB,EAAEyC,MAAM,CAACG;AAHhC;AAKD;;AACD,SAAKtC,uBAAL;AAA8B;AAC5B,iCACKkC,KADL;AAEEpD,UAAAA,SAAS,EAAE;AAFb;AAID;;AACD,SAAKmB,uBAAL;AAA8B;AAC5B,iCACKiC,KADL;AAEEpD,UAAAA,SAAS,EAAEqD,MAAM,CAACE;AAFpB;AAID;;AACD,SAAKnC,uBAAL;AAA8B;AAC5B,iCACKgC,KADL;AAGD;;AACD;AAAS;AACP,iCACKA,KADL;AAGD;AA3EH;AA6ED,CA9ED","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"이성국\"\n      },\n      content: \"첫 번째 게시글\",\n      img: \"\",\n      Comments: []\n    }\n  ], // 화면에 보일 포스트들\n  imagePaths: [], // 미리보기 이미지 경로\n  addPostErrorReason: \"\", // 포스트 업로드 실패 사유\n  isAddingPost: false, // 포스트 업로드 중\n  postAdded: false, // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: \"\",\n  commentAdded: false\n};\n\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  content: \"나는 더미입니다.\",\n  Comments: []\n};\n\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  createdAt: new Date(),\n  content: \"더미 댓글입니다.\"\n};\n\nexport const LOAD_MAIN_POSTS_REQUEST = \"LOAD_MAIN_POSTS_REQUEST\";\nexport const LOAD_MAIN_POSTS_SUCCESS = \"LOAD_MAIN_POSTS_SUCCESS\";\nexport const LOAD_MAIN_POSTS_FAILURE = \"LOAD_MAIN_POSTS_FAILURE\";\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\n\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\n\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const LOAD_COMMENTS_REQUEST = \"LOAD_COMMENTS_REQUEST\";\nexport const LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\nexport const LOAD_COMMENTS_FAILURE = \"LOAD_COMMENTS_FAILURE\";\n\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST: {\n      return {\n        ...state,\n        isAddingPost: true,\n        addPostErrorReason: \"\",\n        postAdded: false\n      };\n    }\n    case ADD_POST_SUCCESS: {\n      return {\n        ...state,\n        isAddingPost: false,\n        mainPosts: [action.data, ...state.mainPosts],\n        postAdded: true\n      };\n    }\n    case ADD_POST_FAILURE: {\n      return {\n        ...state,\n        isAddingPost: false,\n        addPostErrorReason: action.error\n      };\n    }\n    case ADD_COMMENT_REQUEST: {\n      return {\n        ...state,\n        isAddingComment: true,\n        addCommentErrorReason: \"\",\n        commentAdded: false\n      };\n    }\n    case ADD_COMMENT_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(\n        v => v.id === action.data.postId\n      );\n      const post = state.mainPosts[postIndex];\n      const Comments = [...post.Comments, dummyComment];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Comments };\n      return {\n        ...state,\n        isAddingComment: false,\n        mainPosts,\n        commentAdded: true\n      };\n    }\n    case ADD_COMMENT_FAILURE: {\n      return {\n        ...state,\n        isAddingComment: false,\n        addCommentErrorReason: action.error\n      };\n    }\n    case LOAD_MAIN_POSTS_REQUEST: {\n      return {\n        ...state,\n        mainPosts: []\n      };\n    }\n    case LOAD_MAIN_POSTS_SUCCESS: {\n      return {\n        ...state,\n        mainPosts: action.data\n      };\n    }\n    case LOAD_MAIN_POSTS_FAILURE: {\n      return {\n        ...state\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}