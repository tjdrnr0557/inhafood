{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport Slick from \"react-slick\";\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      zIndex: 5000,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  }, __jsx(\"header\", {\n    style: {\n      height: 44,\n      background: \"white\",\n      position: \"relative\",\n      padding: 0,\n      textAlign: \"center\"\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      margin: 0,\n      fontSize: \"17px\",\n      color: \"#333\",\n      lineHeight: \"44px\"\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(Icon, {\n    type: \"close\",\n    onClick: onClose,\n    style: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n      padding: 15,\n      lineHeight: \"14px\",\n      cursor: \"pointer\"\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: \"calc(100% - 44px)\",\n      background: \"#090909\"\n    }\n  }, __jsx(\"div\", null, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: false,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }, images.map(v => {\n    return __jsx(\"div\", {\n      style: {\n        padding: 32,\n        textAlign: \"center\"\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v.src}`,\n      style: {\n        margin: \"0 auto\",\n        maxHeight: 750\n      }\n    }));\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 75,\n      height: 30,\n      lineHeight: \"30px\",\n      borderRadius: 15,\n      background: \"#313131\",\n      display: \"inline-block\",\n      textAlign: \"center\",\n      color: \"white\",\n      fontSize: \"15px\"\n    }\n  }, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/components/ImagesZoom.js"],"names":["React","useState","PropTypes","Icon","Slick","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","position","zIndex","top","left","right","bottom","height","background","padding","textAlign","margin","fontSize","color","lineHeight","cursor","slide","map","v","src","maxHeight","width","borderRadius","display","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport Slick from \"react-slick\";\n\nconst ImagesZoom = ({ images, onClose }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 5000,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      }}\n    >\n      <header\n        style={{\n          height: 44,\n          background: \"white\",\n          position: \"relative\",\n          padding: 0,\n          textAlign: \"center\"\n        }}\n      >\n        <h1\n          style={{\n            margin: 0,\n            fontSize: \"17px\",\n            color: \"#333\",\n            lineHeight: \"44px\"\n          }}\n        >\n          상세 이미지\n        </h1>\n        <Icon\n          type=\"close\"\n          onClick={onClose}\n          style={{\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n            padding: 15,\n            lineHeight: \"14px\",\n            cursor: \"pointer\"\n          }}\n        />\n      </header>\n      <div style={{ height: \"calc(100% - 44px)\", background: \"#090909\" }}>\n        <div>\n          <Slick\n            initialSlide={0}\n            afterChange={slide => setCurrentSlide(slide)}\n            infinite={false}\n            arrows\n            slidesToShow={1}\n            slidesToScroll={1}\n          >\n            {images.map(v => {\n              return (\n                <div style={{ padding: 32, textAlign: \"center\" }}>\n                  <img\n                    src={`http://localhost:3065/${v.src}`}\n                    style={{ margin: \"0 auto\", maxHeight: 750 }}\n                  />\n                </div>\n              );\n            })}\n          </Slick>\n          <div style={{ textAlign: \"center\" }}>\n            <div\n              style={{\n                width: 75,\n                height: 30,\n                lineHeight: \"30px\",\n                borderRadius: 15,\n                background: \"#313131\",\n                display: \"inline-block\",\n                textAlign: \"center\",\n                color: \"white\",\n                fontSize: \"15px\"\n              }}\n            >\n              {currentSlide + 1} / {images.length}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string\n    })\n  ).isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ImagesZoom;\n"]},"metadata":{},"sourceType":"module"}