{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Button, List, Card, Icon } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, REMOVE_FOLLOWER_REQUEST, UNFOLLOW_USER_REQUEST } from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followingList,\n    followerList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollowing && __jsx(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: loadMoreFollowings\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: \"20px\"\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: \"20px\"\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: hasMoreFollower && __jsx(Button, {\n      style: {\n        width: \"100%\"\n      },\n      onClick: loadMoreFollowers\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: \"20px\"\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(Icon, {\n        key: \"stop\",\n        type: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  }))));\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST\n\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  }); // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/pages/profile.js"],"names":["React","useCallback","Button","List","Card","Icon","useDispatch","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","REMOVE_FOLLOWER_REQUEST","UNFOLLOW_USER_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","Profile","dispatch","followingList","followerList","hasMoreFollower","hasMoreFollowing","state","user","mainPosts","post","onUnfollow","userId","type","data","onRemoveFollower","loadMoreFollowings","offset","length","loadMoreFollowers","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Button, List, Card, Icon } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport NicknameEditForm from \"../containers/NicknameEditForm\";\nimport {\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWINGS_REQUEST,\n  REMOVE_FOLLOWER_REQUEST,\n  UNFOLLOW_USER_REQUEST\n} from \"../reducers/user\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    followingList,\n    followerList,\n    hasMoreFollower,\n    hasMoreFollowing\n  } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  const onUnfollow = useCallback(\n    userId => () => {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    },\n    []\n  );\n\n  const onRemoveFollower = useCallback(\n    userId => () => {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    },\n    []\n  );\n\n  const loadMoreFollowings = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n\n  const loadMoreFollowers = useCallback(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n\n  return (\n    <div>\n      <NicknameEditForm />\n      <List\n        style={{ marginBottom: \"20px\" }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>팔로잉 목록</div>}\n        loadMore={\n          hasMoreFollowing && (\n            <Button style={{ width: \"100%\" }} onClick={loadMoreFollowings}>\n              더 보기\n            </Button>\n          )\n        }\n        bordered\n        dataSource={followingList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: \"20px\" }}>\n            <Card\n              actions={[\n                <Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />\n              ]}\n            >\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <List\n        style={{ marginBottom: \"20px\" }}\n        grid={{ gutter: 4, xs: 2, md: 3 }}\n        size=\"small\"\n        header={<div>팔로워 목록</div>}\n        loadMore={\n          hasMoreFollower && (\n            <Button style={{ width: \"100%\" }} onClick={loadMoreFollowers}>\n              더 보기\n            </Button>\n          )\n        }\n        bordered\n        dataSource={followerList}\n        renderItem={item => (\n          <List.Item style={{ marginTop: \"20px\" }}>\n            <Card\n              actions={[\n                <Icon\n                  key=\"stop\"\n                  type=\"stop\"\n                  onClick={onRemoveFollower(item.id)}\n                />\n              ]}\n            >\n              <Card.Meta description={item.nickname} />\n            </Card>\n          </List.Item>\n        )}\n      />\n      <div>\n        {mainPosts.map(c => (\n          <PostCard key={+c.createdAt} post={c} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfile.getInitialProps = async context => {\n  const state = context.store.getState();\n  // 이 직전에 LOAD_USERS_REQUEST\n  context.store.dispatch({\n    type: LOAD_FOLLOWERS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_FOLLOWINGS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: state.user.me && state.user.me.id\n  });\n\n  // 이 쯤에서 LOAD_USERS_SUCCESS 돼서 me가 생김.\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}