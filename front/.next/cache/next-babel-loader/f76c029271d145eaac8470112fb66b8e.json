{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport ImagesZoom from \"./ImagesZoom\";\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      showImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  var onClose = useCallback(function () {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[0].src),\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[0].src),\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(images[1].src),\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(images[0].src),\n    width: \"50%\",\n    onClick: onZoom\n  }), __jsx(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"50%\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\"\n    },\n    onClick: onZoom\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/components/PostImages.js"],"names":["React","useCallback","useState","PropTypes","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACWL,QAAQ,CAAC,KAAD,CADnB;AAAA,MAC1BM,cAD0B;AAAA,MACVC,iBADU;;AAGjC,MAAMC,MAAM,GAAGT,WAAW,CAAC,YAAM;AAC/BQ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAIA,MAAME,OAAO,GAAGV,WAAW,CAAC,YAAM;AAChCQ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAF0B,EAExB,EAFwB,CAA3B;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,4BACE;AAAK,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CAAR;AAAoD,MAAA,OAAO,EAAEH;AAA7D,MADF,EAEGF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAFrB,CADF;AAMD;;AACD,MAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WACE,4BACE,mBACE;AACE,MAAA,GAAG,kCAA2BL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CADL;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,OAAO,EAAEH;AAHX,MADF,EAME;AACE,MAAA,GAAG,kCAA2BH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CADL;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,OAAO,EAAEH;AAHX,MANF,CADF,EAaGF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MAbrB,CADF;AAiBD;;AACD,SACE,4BACE,mBACE;AACE,IAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAArC,CADL;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,OAAO,EAAEH;AAHX,IADF,EAME;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,OAAO,EAAE,cADJ;AAELC,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,SAAS,EAAE,QAHN;AAILC,MAAAA,aAAa,EAAE;AAJV,KADT;AAOE,IAAA,OAAO,EAAEP;AAPX,KASE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IATF,EAUE,iBAVF,EAWGH,MAAM,CAACK,MAAP,GAAgB,CAXnB,iDANF,CADF,EAsBGJ,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,OAAO,EAAEI;AAArC,IAtBrB,CADF;AA0BD,CAhED;;AAkEAL,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,OAAV,CACNhB,SAAS,CAACiB,KAAV,CAAgB;AACdP,IAAAA,GAAG,EAAEV,SAAS,CAACkB;AADD,GAAhB,CADM,EAINC;AALmB,CAAvB;AAQA,eAAehB,UAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon } from \"antd\";\nimport ImagesZoom from \"./ImagesZoom\";\n\nconst PostImages = ({ images }) => {\n  const [showImagesZoom, setShowImagesZoom] = useState(false);\n\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return (\n      <>\n        <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n    );\n  }\n  if (images.length === 2) {\n    return (\n      <>\n        <div>\n          <img\n            src={`http://localhost:3065/${images[0].src}`}\n            width=\"50%\"\n            onClick={onZoom}\n          />\n          <img\n            src={`http://localhost:3065/${images[1].src}`}\n            width=\"50%\"\n            onClick={onZoom}\n          />\n        </div>\n        {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n      </>\n    );\n  }\n  return (\n    <>\n      <div>\n        <img\n          src={`http://localhost:3065/${images[0].src}`}\n          width=\"50%\"\n          onClick={onZoom}\n        />\n        <div\n          style={{\n            display: \"inline-block\",\n            width: \"50%\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\"\n          }}\n          onClick={onZoom}\n        >\n          <Icon type=\"plus\" />\n          <br />\n          {images.length - 1}\n          개의 사진 더보기\n        </div>\n      </div>\n      {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\n    </>\n  );\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string\n    })\n  ).isRequired\n};\n\nexport default PostImages;\n"]},"metadata":{},"sourceType":"module"}