{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_COMMENTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(postData) {\n  return axios.post(\"/post\", postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      // post reducer의 데이터를 수정\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      // user reducer의 데이터를 수정\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadMainPosts() {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nfunction loadHashtagPostsAPI(tag) {\n  return axios.get(`/hashtag/${tag}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(`/user/${id}/posts`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, {\n    content: data.content\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(`/post/${postId}/comments`);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.data);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      data: {\n        postId: action.data,\n        comments: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post(\"/post/images\", formData, {\n    withCredentials: true\n  });\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction likePostAPI(postId) {\n  return axios.post(`/post/${postId}/like`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction unlikePostAPI(postId) {\n  return axios.delete(`/post/${postId}/like`, {\n    withCredentials: true\n  });\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction retweetAPI(postId) {\n  return axios.post(`/post/${postId}/retweet`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: e\n    });\n    alert(e.response && e.response.data);\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadMainPosts), fork(watchAddPost), fork(watchAddComment), fork(watchLoadComments), fork(watchLoadHashtagPosts), fork(watchLoadUserPosts), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","call","axios","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_COMMENTS_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","addPostAPI","postData","post","withCredentials","addPost","action","result","data","type","id","e","error","watchAddPost","loadMainPostsAPI","get","loadMainPosts","watchLoadMainPosts","loadHashtagPostsAPI","tag","loadHashtagPosts","watchLoadHashtagPosts","loadUserPostsAPI","loadUserPosts","watchLoadUserPosts","addCommentAPI","postId","content","addComment","comment","console","watchAddComment","loadCommentsAPI","loadComments","comments","watchLoadComments","uploadImagesAPI","formData","uploadImages","watchUploadImages","likePostAPI","likePost","userId","watchLikePost","unlikePostAPI","delete","unlikePost","watchUnlikePost","retweetAPI","retweet","alert","response","watchRetweet","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,iBAPF,EAQEC,iBARF,EASEC,iBATF,EAUEC,qBAVF,EAWEC,qBAXF,EAYEC,qBAZF,EAaEC,0BAbF,EAcEC,0BAdF,EAeEC,0BAfF,EAgBEC,uBAhBF,EAiBEC,uBAjBF,EAkBEC,uBAlBF,EAmBEC,uBAnBF,EAoBEC,uBApBF,EAqBEC,uBArBF,EAsBEC,eAtBF,EAuBEC,eAvBF,EAwBEC,eAxBF,EAyBEC,mBAzBF,EA0BEC,mBA1BF,EA2BEC,mBA3BF,EA4BEC,qBA5BF,EA6BEC,qBA7BF,EA8BEC,qBA9BF,QA+BO,kBA/BP;AAgCA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOjC,KAAK,CAACkC,IAAN,CAAW,OAAX,EAAoBD,QAApB,EAA8B;AACnCE,IAAAA,eAAe,EAAE;AADkB,GAA9B,CAAP;AAGD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACiC,UAAD,EAAaK,MAAM,CAACE,IAApB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR;AACA2C,MAAAA,IAAI,EAAErC,gBAFE;AAGRoC,MAAAA,IAAI,EAAED,MAAM,CAACC;AAHL,KAAD,CAAT;AAKA,UAAM1C,GAAG,CAAC;AACR;AACA2C,MAAAA,IAAI,EAAET,cAFE;AAGRQ,MAAAA,IAAI,EAAED,MAAM,CAACC,IAAP,CAAYE;AAHV,KAAD,CAAT;AAKD,GAZD,CAYE,OAAOC,CAAP,EAAU;AACV,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEvC,gBADE;AAER0C,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMhD,UAAU,CAACM,gBAAD,EAAmBkC,OAAnB,CAAhB;AACD;;AAED,SAASS,gBAAT,GAA4B;AAC1B,SAAO7C,KAAK,CAAC8C,GAAN,CAAU,QAAV,CAAP;AACD;;AAED,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMT,MAAM,GAAG,MAAMvC,IAAI,CAAC8C,gBAAD,CAAzB;AACA,UAAMhD,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEtB,uBADE;AAERqB,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,CAAP,EAAU;AACV,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAExB,uBADE;AAER2B,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUM,kBAAV,GAA+B;AAC7B,QAAMpD,UAAU,CAACqB,uBAAD,EAA0B8B,aAA1B,CAAhB;AACD;;AAED,SAASE,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,SAAOlD,KAAK,CAAC8C,GAAN,CAAW,YAAWI,GAAI,EAA1B,CAAP;AACD;;AAED,UAAUC,gBAAV,CAA2Bd,MAA3B,EAAmC;AACjC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACkD,mBAAD,EAAsBZ,MAAM,CAACE,IAA7B,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEzB,0BADE;AAERwB,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,CAAP,EAAU;AACV,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAE3B,0BADE;AAER8B,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,qBAAV,GAAkC;AAChC,QAAMxD,UAAU,CAACkB,0BAAD,EAA6BqC,gBAA7B,CAAhB;AACD;;AAED,SAASE,gBAAT,CAA0BZ,EAA1B,EAA8B;AAC5B,SAAOzC,KAAK,CAAC8C,GAAN,CAAW,SAAQL,EAAG,QAAtB,CAAP;AACD;;AAED,UAAUa,aAAV,CAAwBjB,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACsD,gBAAD,EAAmBhB,MAAM,CAACE,IAA1B,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEnB,uBADE;AAERkB,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,CAAP,EAAU;AACV,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAErB,uBADE;AAERwB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,kBAAV,GAA+B;AAC7B,QAAM3D,UAAU,CAACwB,uBAAD,EAA0BkC,aAA1B,CAAhB;AACD;;AAED,SAASE,aAAT,CAAuBjB,IAAvB,EAA6B;AAC3B,SAAOvC,KAAK,CAACkC,IAAN,CACJ,SAAQK,IAAI,CAACkB,MAAO,UADhB,EAEL;AAAEC,IAAAA,OAAO,EAAEnB,IAAI,CAACmB;AAAhB,GAFK,EAGL;AACEvB,IAAAA,eAAe,EAAE;AADnB,GAHK,CAAP;AAOD;;AAED,UAAUwB,UAAV,CAAqBtB,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACyD,aAAD,EAAgBnB,MAAM,CAACE,IAAvB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAElC,mBADE;AAERiC,MAAAA,IAAI,EAAE;AACJkB,QAAAA,MAAM,EAAEpB,MAAM,CAACE,IAAP,CAAYkB,MADhB;AAEJG,QAAAA,OAAO,EAAEtB,MAAM,CAACC;AAFZ;AAFE,KAAD,CAAT;AAOD,GATD,CASE,OAAOG,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEpC,mBADE;AAERuC,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUoB,eAAV,GAA4B;AAC1B,QAAMlE,UAAU,CAACS,mBAAD,EAAsBsD,UAAtB,CAAhB;AACD;;AAED,SAASI,eAAT,CAAyBN,MAAzB,EAAiC;AAC/B,SAAOzD,KAAK,CAAC8C,GAAN,CAAW,SAAQW,MAAO,WAA1B,CAAP;AACD;;AAED,UAAUO,YAAV,CAAuB3B,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACgE,eAAD,EAAkB1B,MAAM,CAACE,IAAzB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAE5B,qBADE;AAER2B,MAAAA,IAAI,EAAE;AACJkB,QAAAA,MAAM,EAAEpB,MAAM,CAACE,IADX;AAEJ0B,QAAAA,QAAQ,EAAE3B,MAAM,CAACC;AAFb;AAFE,KAAD,CAAT;AAOD,GATD,CASE,OAAOG,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAE9B,qBADE;AAERiC,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUwB,iBAAV,GAA8B;AAC5B,QAAMtE,UAAU,CAACe,qBAAD,EAAwBqD,YAAxB,CAAhB;AACD;;AAED,SAASG,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,SAAOpE,KAAK,CAACkC,IAAN,CAAW,cAAX,EAA2BkC,QAA3B,EAAqC;AAC1CjC,IAAAA,eAAe,EAAE;AADyB,GAArC,CAAP;AAGD;;AAED,UAAUkC,YAAV,CAAuBhC,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACoE,eAAD,EAAkB9B,MAAM,CAACE,IAAzB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEV,qBADE;AAERS,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEZ,qBADE;AAERe,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAU4B,iBAAV,GAA8B;AAC5B,QAAM1E,UAAU,CAACiC,qBAAD,EAAwBwC,YAAxB,CAAhB;AACD;;AAED,SAASE,WAAT,CAAqBd,MAArB,EAA6B;AAC3B,SAAOzD,KAAK,CAACkC,IAAN,CACJ,SAAQuB,MAAO,OADX,EAEL,EAFK,EAGL;AACEtB,IAAAA,eAAe,EAAE;AADnB,GAHK,CAAP;AAOD;;AAED,UAAUqC,QAAV,CAAmBnC,MAAnB,EAA2B;AACzB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACwE,WAAD,EAAclC,MAAM,CAACE,IAArB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAE/B,iBADE;AAER8B,MAAAA,IAAI,EAAE;AACJkB,QAAAA,MAAM,EAAEpB,MAAM,CAACE,IADX;AAEJkC,QAAAA,MAAM,EAAEnC,MAAM,CAACC,IAAP,CAAYkC;AAFhB;AAFE,KAAD,CAAT;AAOD,GATD,CASE,OAAO/B,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEjC,iBADE;AAERoC,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUgC,aAAV,GAA0B;AACxB,QAAM9E,UAAU,CAACY,iBAAD,EAAoBgE,QAApB,CAAhB;AACD;;AAED,SAASG,aAAT,CAAuBlB,MAAvB,EAA+B;AAC7B,SAAOzD,KAAK,CAAC4E,MAAN,CAAc,SAAQnB,MAAO,OAA7B,EAAqC;AAC1CtB,IAAAA,eAAe,EAAE;AADyB,GAArC,CAAP;AAGD;;AAED,UAAU0C,UAAV,CAAqBxC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAAC4E,aAAD,EAAgBtC,MAAM,CAACE,IAAvB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEb,mBADE;AAERY,MAAAA,IAAI,EAAE;AACJkB,QAAAA,MAAM,EAAEpB,MAAM,CAACE,IADX;AAEJkC,QAAAA,MAAM,EAAEnC,MAAM,CAACC,IAAP,CAAYkC;AAFhB;AAFE,KAAD,CAAT;AAOD,GATD,CASE,OAAO/B,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEf,mBADE;AAERkB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUoC,eAAV,GAA4B;AAC1B,QAAMlF,UAAU,CAAC8B,mBAAD,EAAsBmD,UAAtB,CAAhB;AACD;;AAED,SAASE,UAAT,CAAoBtB,MAApB,EAA4B;AAC1B,SAAOzD,KAAK,CAACkC,IAAN,CACJ,SAAQuB,MAAO,UADX,EAEL,EAFK,EAGL;AACEtB,IAAAA,eAAe,EAAE;AADnB,GAHK,CAAP;AAOD;;AAED,UAAU6C,OAAV,CAAkB3C,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACgF,UAAD,EAAa1C,MAAM,CAACE,IAApB,CAAzB;AACA,UAAM1C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAEhB,eADE;AAERe,MAAAA,IAAI,EAAED,MAAM,CAACC;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOG,CAAP,EAAU;AACVmB,IAAAA,OAAO,CAAClB,KAAR,CAAcD,CAAd;AACA,UAAM7C,GAAG,CAAC;AACR2C,MAAAA,IAAI,EAAElB,eADE;AAERqB,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAIAuC,IAAAA,KAAK,CAACvC,CAAC,CAACwC,QAAF,IAAcxC,CAAC,CAACwC,QAAF,CAAW3C,IAA1B,CAAL;AACD;AACF;;AAED,UAAU4C,YAAV,GAAyB;AACvB,QAAMvF,UAAU,CAAC2B,eAAD,EAAkByD,OAAlB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAM1F,GAAG,CAAC,CACRC,IAAI,CAACqD,kBAAD,CADI,EAERrD,IAAI,CAACiD,YAAD,CAFI,EAGRjD,IAAI,CAACmE,eAAD,CAHI,EAIRnE,IAAI,CAACuE,iBAAD,CAJI,EAKRvE,IAAI,CAACyD,qBAAD,CALI,EAMRzD,IAAI,CAAC4D,kBAAD,CANI,EAOR5D,IAAI,CAAC2E,iBAAD,CAPI,EAQR3E,IAAI,CAAC+E,aAAD,CARI,EASR/E,IAAI,CAACmF,eAAD,CATI,EAURnF,IAAI,CAACwF,YAAD,CAVI,CAAD,CAAT;AAYD","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_COMMENTS_FAILURE,\n  LOAD_COMMENTS_REQUEST,\n  LOAD_COMMENTS_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_MAIN_POSTS_FAILURE,\n  LOAD_MAIN_POSTS_REQUEST,\n  LOAD_MAIN_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  RETWEET_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\n\nfunction addPostAPI(postData) {\n  return axios.post(\"/post\", postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      // post reducer의 데이터를 수정\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      // user reducer의 데이터를 수정\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadMainPosts() {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nfunction loadHashtagPostsAPI(tag) {\n  return axios.get(`/hashtag/${tag}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(`/user/${id}/posts`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\n    `/post/${data.postId}/comment`,\n    { content: data.content },\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(`/post/${postId}/comments`);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.data);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      data: {\n        postId: action.data,\n        comments: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post(\"/post/images\", formData, {\n    withCredentials: true\n  });\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction likePostAPI(postId) {\n  return axios.post(\n    `/post/${postId}/like`,\n    {},\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction unlikePostAPI(postId) {\n  return axios.delete(`/post/${postId}/like`, {\n    withCredentials: true\n  });\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction retweetAPI(postId) {\n  return axios.post(\n    `/post/${postId}/retweet`,\n    {},\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: e\n    });\n    alert(e.response && e.response.data);\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLoadMainPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchLoadComments),\n    fork(watchLoadHashtagPosts),\n    fork(watchLoadUserPosts),\n    fork(watchUploadImages),\n    fork(watchLikePost),\n    fork(watchUnlikePost),\n    fork(watchRetweet)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}