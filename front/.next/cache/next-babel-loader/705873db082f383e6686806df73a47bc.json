{"ast":null,"code":"import produce from \"immer\";\nexport var initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: \"\",\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: \"\",\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: \"\",\n  // 이름 변경 실패 사유\n  hasMoreFollower: false,\n  hasMoreFollowing: false\n};\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; // 액션의 이름\n\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\"; // 액션의 이름\n\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\"; // 액션의 이름\n\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport var LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport var LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\nexport var LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\nexport var LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\nexport var LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\nexport var FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport var FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport var FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\nexport var UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport var UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport var UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\nexport var REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport var REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport var REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport var EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\nexport var EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\nexport var EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        {\n          draft.isLoggingIn = true;\n          draft.logInErrorReason = \"\";\n          break;\n        }\n\n      case LOG_IN_SUCCESS:\n        {\n          draft.isLoggingIn = false;\n          draft.logInErrorReason = \"\";\n          draft.me = action.data;\n          break;\n        }\n\n      case LOG_IN_FAILURE:\n        {\n          draft.isLoggingIn = false;\n          draft.logInErrorReason = action.reason;\n          draft.me = null;\n          break;\n        }\n\n      case LOG_OUT_REQUEST:\n        {\n          draft.isLoggingOut = true;\n          break;\n        }\n\n      case LOG_OUT_SUCCESS:\n        {\n          draft.isLoggingOut = false;\n          draft.me = null;\n          break;\n        }\n\n      case SIGN_UP_REQUEST:\n        {\n          draft.isSignedUp = false;\n          draft.isSigningUp = true;\n          draft.signUpErrorReason = \"\";\n          break;\n        }\n\n      case SIGN_UP_SUCCESS:\n        {\n          draft.isSigningUp = false;\n          draft.isSignedUp = true;\n          break;\n        }\n\n      case SIGN_UP_FAILURE:\n        {\n          draft.isSigningUp = false;\n          draft.signUpErrorReason = action.error;\n          break;\n        }\n\n      case LOAD_USER_REQUEST:\n        {\n          break;\n        }\n\n      case LOAD_USER_SUCCESS:\n        {\n          if (action.me) {\n            draft.me = action.data;\n            break;\n          }\n\n          draft.useInfo = action.data;\n          break;\n        }\n\n      case LOAD_USER_FAILURE:\n        {\n          break;\n        }\n\n      case FOLLOW_USER_REQUEST:\n        {\n          break;\n        }\n\n      case FOLLOW_USER_SUCCESS:\n        {\n          draft.me.Followings.unshift({\n            id: action.data\n          });\n          break;\n        }\n\n      case FOLLOW_USER_FAILURE:\n        {\n          break;\n        }\n\n      case UNFOLLOW_USER_REQUEST:\n        {\n          break;\n        }\n\n      case UNFOLLOW_USER_SUCCESS:\n        {\n          var index = draft.me.Followings.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.me.Followings.splice(index, 1);\n          var index2 = draft.followingList.findIndex(function (v) {\n            return v.id === action.data;\n          });\n          draft.followingList.splice(index2, 1);\n          break;\n        }\n\n      case UNFOLLOW_USER_FAILURE:\n        {\n          break;\n        }\n\n      case ADD_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break;\n        }\n\n      case REMOVE_POST_OF_ME:\n        {\n          var _index = draft.me.Posts.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.Posts.splice(_index, 1);\n          break;\n        }\n\n      case LOAD_FOLLOWERS_REQUEST:\n        {\n          draft.followerList = !action.offset ? [] : draft.followerList;\n          draft.hasMoreFollower = action.offset ? draft.hasMoreFollower : true; // 처음 데이터를 가져올 때는 더보기 버튼을 보여주는 걸로\n\n          break;\n        }\n\n      case LOAD_FOLLOWERS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followerList.push(d);\n          });\n          draft.hasMoreFollower = action.data.length === 3;\n          break;\n        }\n\n      case LOAD_FOLLOWERS_FAILURE:\n        {\n          break;\n        }\n\n      case LOAD_FOLLOWINGS_REQUEST:\n        {\n          draft.followingList = !action.offset ? [] : draft.followingList;\n          draft.hasMoreFollowing = action.offset ? draft.hasMoreFollowing : true; // 처음 데이터를 가져올 때는 더보기 버튼을 보여주는 걸로\n\n          break;\n        }\n\n      case LOAD_FOLLOWINGS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.followingList.push(d);\n          });\n          draft.hasMoreFollowing = action.data.length === 3;\n          break;\n        }\n\n      case LOAD_FOLLOWINGS_FAILURE:\n        {\n          break;\n        }\n\n      case REMOVE_FOLLOWER_REQUEST:\n        {\n          break;\n        }\n\n      case REMOVE_FOLLOWER_SUCCESS:\n        {\n          var _index2 = draft.me.Followers.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.me.Followers.splice(_index2, 1);\n\n          var _index3 = draft.followerList.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.followerList.splice(_index3, 1);\n          break;\n        }\n\n      case REMOVE_FOLLOWER_FAILURE:\n        {\n          break;\n        }\n\n      case EDIT_NICKNAME_REQUEST:\n        {\n          draft.isEditingNickname = true;\n          draft.editNicknameErrorReason = \"\";\n          break;\n        }\n\n      case EDIT_NICKNAME_SUCCESS:\n        {\n          draft.isEditingNickname = false;\n          draft.me.nickname = action.data;\n          break;\n        }\n\n      case EDIT_NICKNAME_FAILURE:\n        {\n          draft.isEditingNickname = false;\n          draft.editNicknameErrorReason = action.error;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/reducers/user.js"],"names":["produce","initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","state","action","draft","type","data","reason","error","useInfo","Followings","unshift","id","index","findIndex","v","splice","index2","Posts","offset","forEach","d","push","length","Followers","nickname"],"mappings":"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","sourcesContent":["import produce from \"immer\";\n\nexport const initialState = {\n  isLoggingOut: false, // 로그아웃 시도중\n  isLoggingIn: false, // 로그인 시도중\n  logInErrorReason: \"\", // 로그인 실패 사유\n  isSignedUp: false, // 회원가입 성공\n  isSigningUp: false, // 회원가입 시도중\n  signUpErrorReason: \"\", // 회원가입 실패 사유\n  me: null, // 내 정보\n  followingList: [], // 팔로잉 리스트\n  followerList: [], // 팔로워 리스트\n  userInfo: null, // 남의 정보\n  isEditingNickname: false, // 이름 변경 중\n  editNicknameErrorReason: \"\", // 이름 변경 실패 사유\n  hasMoreFollower: false,\n  hasMoreFollowing: false\n};\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\"; // 액션의 이름\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\"; // 액션의 이름\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\"; // 액션의 이름\n\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport const LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport const LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\n\nexport const LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLOWINGS_REQUEST\";\nexport const LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLOWINGS_SUCCESS\";\nexport const LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLOWINGS_FAILURE\";\n\nexport const FOLLOW_USER_REQUEST = \"FOLLOW_USER_REQUEST\";\nexport const FOLLOW_USER_SUCCESS = \"FOLLOW_USER_SUCCESS\";\nexport const FOLLOW_USER_FAILURE = \"FOLLOW_USER_FAILURE\";\n\nexport const UNFOLLOW_USER_REQUEST = \"UNFOLLOW_USER_REQUEST\";\nexport const UNFOLLOW_USER_SUCCESS = \"UNFOLLOW_USER_SUCCESS\";\nexport const UNFOLLOW_USER_FAILURE = \"UNFOLLOW_USER_FAILURE\";\n\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\n\nexport const EDIT_NICKNAME_REQUEST = \"EDIT_NICKNAME_REQUEST\";\nexport const EDIT_NICKNAME_SUCCESS = \"EDIT_NICKNAME_SUCCESS\";\nexport const EDIT_NICKNAME_FAILURE = \"EDIT_NICKNAME_FAILURE\";\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\nexport default (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST: {\n        draft.isLoggingIn = true;\n        draft.logInErrorReason = \"\";\n        break;\n      }\n      case LOG_IN_SUCCESS: {\n        draft.isLoggingIn = false;\n        draft.logInErrorReason = \"\";\n        draft.me = action.data;\n        break;\n      }\n      case LOG_IN_FAILURE: {\n        draft.isLoggingIn = false;\n        draft.logInErrorReason = action.reason;\n        draft.me = null;\n        break;\n      }\n      case LOG_OUT_REQUEST: {\n        draft.isLoggingOut = true;\n        break;\n      }\n      case LOG_OUT_SUCCESS: {\n        draft.isLoggingOut = false;\n        draft.me = null;\n        break;\n      }\n      case SIGN_UP_REQUEST: {\n        draft.isSignedUp = false;\n        draft.isSigningUp = true;\n        draft.signUpErrorReason = \"\";\n        break;\n      }\n      case SIGN_UP_SUCCESS: {\n        draft.isSigningUp = false;\n        draft.isSignedUp = true;\n        break;\n      }\n      case SIGN_UP_FAILURE: {\n        draft.isSigningUp = false;\n        draft.signUpErrorReason = action.error;\n        break;\n      }\n      case LOAD_USER_REQUEST: {\n        break;\n      }\n      case LOAD_USER_SUCCESS: {\n        if (action.me) {\n          draft.me = action.data;\n          break;\n        }\n        draft.useInfo = action.data;\n        break;\n      }\n      case LOAD_USER_FAILURE: {\n        break;\n      }\n      case FOLLOW_USER_REQUEST: {\n        break;\n      }\n      case FOLLOW_USER_SUCCESS: {\n        draft.me.Followings.unshift({ id: action.data });\n        break;\n      }\n      case FOLLOW_USER_FAILURE: {\n        break;\n      }\n      case UNFOLLOW_USER_REQUEST: {\n        break;\n      }\n      case UNFOLLOW_USER_SUCCESS: {\n        const index = draft.me.Followings.findIndex(v => v.id === action.data);\n        draft.me.Followings.splice(index, 1);\n        const index2 = draft.followingList.findIndex(v => v.id === action.data);\n        draft.followingList.splice(index2, 1);\n        break;\n      }\n      case UNFOLLOW_USER_FAILURE: {\n        break;\n      }\n      case ADD_POST_TO_ME: {\n        draft.me.Posts.unshift({ id: action.data });\n        break;\n      }\n      case REMOVE_POST_OF_ME: {\n        const index = draft.me.Posts.findIndex(v => v.id === action.data);\n        draft.me.Posts.splice(index, 1);\n        break;\n      }\n      case LOAD_FOLLOWERS_REQUEST: {\n        draft.followerList = !action.offset ? [] : draft.followerList;\n        draft.hasMoreFollower = action.offset ? draft.hasMoreFollower : true; // 처음 데이터를 가져올 때는 더보기 버튼을 보여주는 걸로\n        break;\n      }\n      case LOAD_FOLLOWERS_SUCCESS: {\n        action.data.forEach(d => {\n          draft.followerList.push(d);\n        });\n        draft.hasMoreFollower = action.data.length === 3;\n        break;\n      }\n      case LOAD_FOLLOWERS_FAILURE: {\n        break;\n      }\n      case LOAD_FOLLOWINGS_REQUEST: {\n        draft.followingList = !action.offset ? [] : draft.followingList;\n        draft.hasMoreFollowing = action.offset ? draft.hasMoreFollowing : true; // 처음 데이터를 가져올 때는 더보기 버튼을 보여주는 걸로\n        break;\n      }\n      case LOAD_FOLLOWINGS_SUCCESS: {\n        action.data.forEach(d => {\n          draft.followingList.push(d);\n        });\n        draft.hasMoreFollowing = action.data.length === 3;\n        break;\n      }\n      case LOAD_FOLLOWINGS_FAILURE: {\n        break;\n      }\n      case REMOVE_FOLLOWER_REQUEST: {\n        break;\n      }\n      case REMOVE_FOLLOWER_SUCCESS: {\n        const index = draft.me.Followers.findIndex(v => v.id === action.data);\n        draft.me.Followers.splice(index, 1);\n        const index2 = draft.followerList.findIndex(v => v.id === action.data);\n        draft.followerList.splice(index2, 1);\n        break;\n      }\n      case REMOVE_FOLLOWER_FAILURE: {\n        break;\n      }\n      case EDIT_NICKNAME_REQUEST: {\n        draft.isEditingNickname = true;\n        draft.editNicknameErrorReason = \"\";\n        break;\n      }\n      case EDIT_NICKNAME_SUCCESS: {\n        draft.isEditingNickname = false;\n        draft.me.nickname = action.data;\n        break;\n      }\n      case EDIT_NICKNAME_FAILURE: {\n        draft.isEditingNickname = false;\n        draft.editNicknameErrorReason = action.error;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}