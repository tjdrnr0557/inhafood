{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logIn),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogIn),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollower),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editNickname),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchEditNickname),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { EDIT_NICKNAME_FAILURE, EDIT_NICKNAME_REQUEST, EDIT_NICKNAME_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/login\", loginData, {\n    withCredentials: true\n  });\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\", signUpData);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/logout\", {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : \"/user/\", {\n    withCredentials: true // 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\n\n  }); // 서버사이드렌더링일 때는, 브라우저가 없어요.\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction loadFollowersAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId || 0, \"/followers?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data, action.offset);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFollowingsAPI(userId) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId || 0, \"/followings?offset=\").concat(offset, \"&limit=\").concat(limit), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data, action.offset);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction removeFollowerAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follower\"), {\n    withCredentials: true\n  });\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction editNicknameAPI(nickname) {\n  // 서버에 요청을 보내는 부분\n  return axios.patch(\"/user/nickname\", {\n    nickname: nickname\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction editNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function editNickname$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return call(editNicknameAPI, action.data);\n\n        case 3:\n          result = _context19.sent;\n          _context19.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: EDIT_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context19.next = 13;\n          break;\n\n        case 8:\n          _context19.prev = 8;\n          _context19.t0 = _context19[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context19.t0);\n          _context19.next = 13;\n          return put({\n            type: EDIT_NICKNAME_FAILURE,\n            error: _context19.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 8]]);\n}\n\nfunction watchEditNickname() {\n  return _regeneratorRuntime.wrap(function watchEditNickname$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower), fork(watchEditNickname)]);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/sagas/user.js"],"names":["logIn","watchLogIn","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","editNickname","watchEditNickname","userSaga","all","call","fork","put","takeEvery","axios","EDIT_NICKNAME_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","logInAPI","loginData","post","withCredentials","action","data","result","type","console","error","signUpAPI","signUpData","logOutAPI","loadUserAPI","userId","get","me","followAPI","unfollowAPI","loadFollowersAPI","offset","limit","loadFollowingsAPI","removeFollowerAPI","editNicknameAPI","nickname","patch"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  EDIT_NICKNAME_FAILURE,\n  EDIT_NICKNAME_REQUEST,\n  EDIT_NICKNAME_SUCCESS,\n  FOLLOW_USER_FAILURE,\n  FOLLOW_USER_REQUEST,\n  FOLLOW_USER_SUCCESS,\n  LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWERS_SUCCESS,\n  LOAD_FOLLOWINGS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST,\n  LOAD_FOLLOWINGS_SUCCESS,\n  LOAD_USER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  REMOVE_FOLLOWER_FAILURE,\n  REMOVE_FOLLOWER_REQUEST,\n  REMOVE_FOLLOWER_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  UNFOLLOW_USER_FAILURE,\n  UNFOLLOW_USER_REQUEST,\n  UNFOLLOW_USER_SUCCESS\n} from \"../reducers/user\";\n\nfunction logInAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/login\", loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction signUpAPI(signUpData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\", signUpData);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signUpAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\n    \"/user/logout\",\n    {},\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* logOut() {\n  try {\n    // yield call(logOutAPI);\n    yield call(logOutAPI);\n    yield put({\n      // put은 dispatch 동일\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? `/user/${userId}` : \"/user/\", {\n    withCredentials: true // 클라이언트에서 요청 보낼 때는 브라우저가 쿠키를 같이 동봉해줘요\n  }); // 서버사이드렌더링일 때는, 브라우저가 없어요.\n}\n\nfunction* loadUser(action) {\n  try {\n    // yield call(loadUserAPI);\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      me: !action.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\n    `/user/${userId}/follow`,\n    {},\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* follow(action) {\n  try {\n    // yield call(followAPI);\n    const result = yield call(followAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: FOLLOW_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: FOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_USER_REQUEST, follow);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.delete(`/user/${userId}/follow`, {\n    withCredentials: true\n  });\n}\n\nfunction* unfollow(action) {\n  try {\n    // yield call(unfollowAPI);\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: UNFOLLOW_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: UNFOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeEvery(UNFOLLOW_USER_REQUEST, unfollow);\n}\n\nfunction loadFollowersAPI(userId, offset = 0, limit = 3) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\n    `/user/${userId || 0}/followers?offset=${offset}&limit=${limit}`,\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* loadFollowers(action) {\n  try {\n    // yield call(loadFollowersAPI);\n    const result = yield call(loadFollowersAPI, action.data, action.offset);\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction loadFollowingsAPI(userId, offset = 0, limit = 3) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\n    `/user/${userId || 0}/followings?offset=${offset}&limit=${limit}`,\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* loadFollowings(action) {\n  try {\n    // yield call(loadFollowersAPI);\n    const result = yield call(loadFollowingsAPI, action.data, action.offset);\n    yield put({\n      // put은 dispatch 동일\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction removeFollowerAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.delete(`/user/${userId}/follower`, {\n    withCredentials: true\n  });\n}\n\nfunction* removeFollower(action) {\n  try {\n    // yield call(loadFollowersAPI);\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction editNicknameAPI(nickname) {\n  // 서버에 요청을 보내는 부분\n  return axios.patch(\n    \"/user/nickname\",\n    { nickname },\n    {\n      withCredentials: true\n    }\n  );\n}\n\nfunction* editNickname(action) {\n  try {\n    // yield call(loadFollowersAPI);\n    const result = yield call(editNicknameAPI, action.data);\n    yield put({\n      // put은 dispatch 동일\n      type: EDIT_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    // loginAPI 실패\n    console.error(e);\n    yield put({\n      type: EDIT_NICKNAME_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchEditNickname() {\n  yield takeEvery(EDIT_NICKNAME_REQUEST, editNickname);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchLoadUser),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLoadFollowers),\n    fork(watchLoadFollowings),\n    fork(watchRemoveFollower),\n    fork(watchEditNickname)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}