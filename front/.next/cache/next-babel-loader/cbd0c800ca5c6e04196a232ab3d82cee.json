{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport PropTypes from \"prop-types\";\nimport withRedux from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport AppLayout from \"../components/AppLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst NodeBird = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charSet: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps)));\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nNodeBird.getInitialProps = async context => {\n  console.log(context);\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\" ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/pages/_app.js"],"names":["React","Head","PropTypes","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","AppLayout","reducer","rootSaga","NodeBird","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","console","log","ctx","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACpD,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAED;AAAjB,KACE,MAAC,IAAD,QACE,gCADF,EAEE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC;AAFP,IAFF,EAME;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,IAAI,EAAC;AAJP,IANF,EAYE;AACE,IAAA,GAAG,EAAC,YADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC;AAHP,IAZF,CADF,EAmBE,MAAC,SAAD,QACE,MAAC,SAAD,EAAeC,SAAf,CADF,CAnBF,CADF;AAyBD,CA1BD;;AA4BAH,QAAQ,CAACI,SAAT,GAAqB;AACnBH,EAAAA,SAAS,EAAEX,SAAS,CAACe,WAAV,CAAsBC,UADd;AAEnBJ,EAAAA,KAAK,EAAEZ,SAAS,CAACiB,MAAV,CAAiBD,UAFL;AAGnBH,EAAAA,SAAS,EAAEb,SAAS,CAACiB,MAAV,CAAiBD;AAHT,CAArB;;AAMAN,QAAQ,CAACQ,eAAT,GAA2B,MAAMC,OAAN,IAAiB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAM;AAAEG,IAAAA,GAAF;AAAOX,IAAAA;AAAP,MAAqBQ,OAA3B;AACA,MAAIN,SAAS,GAAG,EAAhB;;AACA,MAAIF,SAAS,CAACO,eAAd,EAA+B;AAC7BL,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACO,eAAV,CAA0BI,GAA1B,CAAlB;AACD;;AACD,SAAO;AAAET,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,MAAMU,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD,QAAMC,cAAc,GAAGpB,oBAAoB,EAA3C;AACA,QAAMqB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GACZ,QACIzB,OAAO,CAACD,eAAe,CAAC,GAAGyB,WAAJ,CAAhB,CADX,GAEIxB,OAAO,CACLD,eAAe,CAAC,GAAGyB,WAAJ,CADV,EAEL,CAACF,OAAO,CAACI,QAAT,IACE,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WADjD,GAEID,MAAM,CAACC,4BAAP,EAFJ,GAGIC,CAAC,IAAIA,CALJ,CAHb;AAUA,QAAMpB,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUgB,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACO,GAAf,CAAmBxB,QAAnB;AACA,SAAOG,KAAP;AACD,CAhBD;;AAkBA,eAAeX,SAAS,CAACsB,cAAD,CAAT,CAA0Bb,QAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport PropTypes from \"prop-types\";\nimport withRedux from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport AppLayout from \"../components/AppLayout\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst NodeBird = ({ Component, store, pageProps }) => {\n  return (\n    <Provider store={store}>\n      <Head>\n        <title>NodeBird</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"\n        />\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          charSet=\"UTF-8\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n        />\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n        />\n      </Head>\n      <AppLayout>\n        <Component {...pageProps} />\n      </AppLayout>\n    </Provider>\n  );\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nNodeBird.getInitialProps = async context => {\n  console.log(context);\n  const { ctx, Component } = context;\n  let pageProps = {};\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n  return { pageProps };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : compose(\n          applyMiddleware(...middlewares),\n          !options.isServer &&\n            typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== \"undefined\"\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\n            : f => f\n        );\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);\n"]},"metadata":{},"sourceType":"module"}