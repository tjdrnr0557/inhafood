{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInput } from \"../pages/signup\"; // TODO: util 폴더로 옮기기\n\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\n\nconst LoginForm = () => {\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    isLoggingIn\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        userId: id,\n        password\n      }\n    });\n  }, [id, password]);\n  return __jsx(Form, {\n    onSubmit: onSubmitForm,\n    style: {\n      padding: \"10px\"\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    type: \"password\",\n    required: true\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isLoggingIn\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, __jsx(Button, null, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/inhafood/front/containers/LoginForm.js"],"names":["React","useCallback","Button","Form","Input","Link","useDispatch","useSelector","useInput","LOG_IN_REQUEST","LoginForm","id","onChangeId","password","onChangePassword","isLoggingIn","state","user","dispatch","onSubmitForm","e","preventDefault","type","data","userId","padding","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CAA4C;;AAC5C,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACK,QAAD,EAAWC,gBAAX,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,YAAY,GAAGlB,WAAW,CAC9BmB,CAAC,IAAI;AACHA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEb,cADC;AAEPc,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEb,EADJ;AAEJE,QAAAA;AAFI;AAFC,KAAD,CAAR;AAOD,GAV6B,EAW9B,CAACF,EAAD,EAAKE,QAAL,CAX8B,CAAhC;AAcA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX;AAArC,KACE,mBACE;AAAO,IAAA,OAAO,EAAC;AAAf,0BADF,EAEE,iBAFF,EAGE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEd,EAA7B;AAAiC,IAAA,QAAQ,EAAEC,UAA3C;AAAuD,IAAA,QAAQ;AAA/D,IAHF,CADF,EAME,mBACE;AAAO,IAAA,OAAO,EAAC;AAAf,gCADF,EAEE,iBAFF,EAGE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,QAAQ,EAAEC,gBAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ;AALV,IAHF,CANF,EAiBE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb;AAAZ,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEX;AAAlD,0BADF,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,iBACE,MAAC,MAAD,mCADF,CADF,CAJF,CAjBF,CADF;AA8BD,CAlDD;;AAoDA,eAAeL,SAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInput } from \"../pages/signup\"; // TODO: util 폴더로 옮기기\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\n\nconst LoginForm = () => {\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const { isLoggingIn } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = useCallback(\n    e => {\n      e.preventDefault();\n      dispatch({\n        type: LOG_IN_REQUEST,\n        data: {\n          userId: id,\n          password\n        }\n      });\n    },\n    [id, password]\n  );\n\n  return (\n    <Form onSubmit={onSubmitForm} style={{ padding: \"10px\" }}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input\n          name=\"user-password\"\n          value={password}\n          onChange={onChangePassword}\n          type=\"password\"\n          required\n        />\n      </div>\n      <div style={{ marginTop: \"10px\" }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a>\n            <Button>회원가입</Button>\n          </a>\n        </Link>\n      </div>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}