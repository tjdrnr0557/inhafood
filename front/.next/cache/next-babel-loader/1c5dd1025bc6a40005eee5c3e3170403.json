{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/sunggooklee/Desktop/react-nodebird/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB,CAAE;;AAExB,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEH;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOI,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL,gBADE;AAERO,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,YAAV,GAAyB;AACvB,QAAMZ,UAAU,CAACK,gBAAD,EAAmBG,OAAnB,CAAhB;AACD;;AAED,SAASK,aAAT,GAAyB,CAAE;;AAE3B,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEN,mBADE;AAERa,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADhB;AAFE,KAAD,CAAT;AAMD,GARD,CAQE,OAAOP,CAAP,EAAU;AACV,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAER,mBADE;AAERU,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAMlB,UAAU,CAACE,mBAAD,EAAsBY,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMvB,GAAG,CAAC,CAACE,IAAI,CAACc,YAAD,CAAL,EAAqBd,IAAI,CAACoB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS\n} from \"../reducers/post\";\n\nfunction addPostAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}